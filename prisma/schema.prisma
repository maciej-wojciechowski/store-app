generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String?
    access_token      String?
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String?
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id             String    @id @default(cuid())
    name           String
    email          String    @unique
    emailVerified  DateTime?
    image          String?
    hashedPassword String?
    accounts       Account[]
    sessions       Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model ShopItem {
    id          String   @id @unique @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
    name        String
    description String
    price       Float
    stock       Int
    image       String?
    category    Category @default(others)
    producer    Producer @default(other)
}

enum Category {
    accessories
    tires
    parts
    oils
    electronics
    suspension
    exhaust_systems
    engine_parts
    others
}

enum Producer {
    nice_producer
    bad_producer
    medium_producer
    so_so_producer
    other
}
